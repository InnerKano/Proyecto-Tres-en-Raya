{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  setup() {\n    // Datos de los jugadores\n    let jugador1 = {\n      id_jugador: '',\n      nombre: '',\n      puntuacion: ''\n    };\n    let jugador2 = {\n      id_jugador: '',\n      nombre: '',\n      puntuacion: ''\n    };\n\n    // Método para registrar la partida\n    const enviarDatos = async () => {\n      try {\n        const url = `http://localhost:4000/api/afiliacion/crear/`;\n        const response = await axios.post(url, jugador1); // Pasar el objeto `data` que contiene ambos jugadores\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n      try {\n        const url = `http://localhost:4000/api/afiliacion/crear/`;\n        const response = await axios.post(url, jugador2);\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // Método para reiniciar el formulario\n    const reset = () => {\n      console.log(jugador1.nombre);\n      jugador1.value = ''; // Reinicia el valor del jugador 1\n      jugador2.value = ''; // Reinicia el valor del jugador 2\n\n      jugador1.id_jugador = ''; // Reinicia el valor del jugador 1\n      jugador1.nombre = '';\n      jugador1.puntuacion = '';\n      jugador2.id_jugador = ''; // Reinicia el valor del jugador 2\n      jugador2.nombre = '';\n      jugador2.puntuacion = '';\n    };\n    return {\n      jugador1,\n      jugador2,\n      enviarDatos,\n      reset\n    };\n  },\n  computed: {\n    Jugad() {\n      return this.$store.state.Jugad;\n    }\n  }\n};","map":{"version":3,"names":["ref","axios","setup","jugador1","id_jugador","nombre","puntuacion","jugador2","enviarDatos","url","response","post","console","log","data","error","reset","value","computed","Jugad","$store","state"],"sources":["C:\\Users\\kanok\\OneDrive\\Documents\\GitHub\\Proyecto Tres en Raya\\Tres_en_Raya_vue\\src\\components\\C02.vue"],"sourcesContent":["<!-- COMPONENTE 2: UI-->\r\n<!-- nombre archivo: C02.vue -->\r\n<template>\r\n    <div id=\"grid_C02\">\r\n      <h2>Registro de Partida</h2>\r\n      <form @submit.prevent=\"registrarPartida\">\r\n        <section>\r\n            <div id=\"player1\" class=\"coolinput\">\r\n                <label for=\"input\" class=\"text\">Jugador 1:</label>\r\n                <input type=\"text\" id=\"jugador1\" v-model=\"jugador1.nombre\" name=\"input\" class=\"input formulario_in\">\r\n            </div>\r\n            <div id=\"player2\" class=\"coolinput\">\r\n                <label for=\"input\" class=\"text\">Jugador 2:</label>\r\n                <input type=\"text\" id=\"jugador2\"  v-model=\"jugador2.nombre\" name=\"input\" class=\"input formulario_in\">\r\n            </div>\r\n            \r\n        </section>\r\n        <button id=\"start\" type=\"button\" @click=\"enviarDatos()\">Iniciar Partida</button>\r\n        <!--  -->\r\n       \r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n\r\n  export default {\r\n    setup() {\r\n      // Datos de los jugadores\r\n      let jugador1 = {\r\n        id_jugador: '',\r\n        nombre:'',\r\n        puntuacion:''\r\n      };\r\n      let jugador2 = {\r\n        id_jugador: '',\r\n        nombre:'',\r\n        puntuacion:''\r\n      };\r\n  \r\n      // Método para registrar la partida\r\n      const enviarDatos = async () => {\r\n        \r\n                try {\r\n                    const url = `http://localhost:4000/api/afiliacion/crear/`;\r\n                    const response = await axios.post(url, jugador1); // Pasar el objeto `data` que contiene ambos jugadores\r\n                    console.log(response.data);\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n                try {\r\n                    const url = `http://localhost:4000/api/afiliacion/crear/`;\r\n                    const response = await axios.post(url, jugador2);\r\n                    console.log(response.data);\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            };\r\n\r\n      // Método para reiniciar el formulario\r\n      const reset = () => {\r\n        console.log(jugador1.nombre);\r\n        jugador1.value = ''; // Reinicia el valor del jugador 1\r\n        jugador2.value = ''; // Reinicia el valor del jugador 2\r\n\r\n        jugador1.id_jugador = ''; // Reinicia el valor del jugador 1\r\n        jugador1.nombre = '';\r\n        jugador1.puntuacion = '';\r\n        jugador2.id_jugador = ''; // Reinicia el valor del jugador 2\r\n        jugador2.nombre = '';\r\n        jugador2.puntuacion = '';\r\n      };\r\n  \r\n      return {\r\n        jugador1,\r\n        jugador2,\r\n        enviarDatos,\r\n        reset\r\n      };\r\n    },\r\n    computed: {\r\n        Jugad() {\r\n            return this.$store.state.Jugad;\r\n        },\r\n    },\r\n\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n     /* GRID */\r\n    #grid_C02 { \r\n        width: 100%;\r\n        height:50%; \r\n        margin: 0 auto;\r\n        display: grid;\r\n        grid-gap: 0px;\r\n        grid-template-columns: repeat(1, 1fr);\r\n        grid-template-rows: repeat(1, 1fr);\r\n        grid-template-areas:  \r\n            \"H2 H2\"                     \r\n            \"S S\"\r\n            \"ST ST\";\r\n        align-items: center;\r\n        justify-items: center;\r\n        text-align: center;\r\n        \r\n    }\r\n    h2{\r\n        grid-area: H2;\r\n        font-family: \"Henny Penny\", cursive;\r\n    }\r\n    section{\r\n        grid-area: S;\r\n        margin-bottom: 10px;\r\n        display: flex;\r\n        justify-items: center;\r\n    }\r\n    #player1{\r\n        grid-area: P1;\r\n    }\r\n    #player1{\r\n        grid-area: P2;\r\n    }\r\n    #start{\r\n        grid-area: ST;\r\n    }\r\n/* Styles inputs jugador */\r\n    .coolinput {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: fit-content;\r\n    position: static;\r\n    max-width: 240px;\r\n    }\r\n\r\n    .coolinput label.text {\r\n    font-size: 0.75rem;\r\n    color: #818CF8;\r\n    font-weight: 700;\r\n    position: relative;\r\n    top: 0.5rem;\r\n    margin: 0 0 0 7px;\r\n    padding: 0 3px;\r\n    background: #e8e8e8e3;\r\n    border-radius: 5px;\r\n    width: fit-content;\r\n    }\r\n\r\n    .coolinput input[type=text].input {\r\n    padding: 11px 10px;\r\n    font-size: 0.75rem;\r\n    border: 2px #818CF8 solid;\r\n    border-radius: 5px;\r\n    background: #e8e8e8;\r\n    }\r\n\r\n    .coolinput input[type=text].input:focus {\r\n    outline: none;\r\n    }\r\n\r\n\r\n  .registro-partida {\r\n    max-width: 400px;\r\n    margin: auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .input-group {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  button {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>"],"mappings":"AAyBE,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AAGzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN;IACA,IAAIC,QAAO,GAAI;MACbC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAC,EAAE;MACTC,UAAU,EAAC;IACb,CAAC;IACD,IAAIC,QAAO,GAAI;MACbH,UAAU,EAAE,EAAE;MACdC,MAAM,EAAC,EAAE;MACTC,UAAU,EAAC;IACb,CAAC;;IAED;IACA,MAAME,WAAU,GAAI,MAAAA,CAAA,KAAY;MAEtB,IAAI;QACA,MAAMC,GAAE,GAAK,6CAA4C;QACzD,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAACF,GAAG,EAAEN,QAAQ,CAAC,EAAE;QAClDS,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACxB;MACA,IAAI;QACA,MAAMN,GAAE,GAAK,6CAA4C;QACzD,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAACF,GAAG,EAAEF,QAAQ,CAAC;QAChDK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;;IAEP;IACA,MAAMC,KAAI,GAAIA,CAAA,KAAM;MAClBJ,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACE,MAAM,CAAC;MAC5BF,QAAQ,CAACc,KAAI,GAAI,EAAE,EAAE;MACrBV,QAAQ,CAACU,KAAI,GAAI,EAAE,EAAE;;MAErBd,QAAQ,CAACC,UAAS,GAAI,EAAE,EAAE;MAC1BD,QAAQ,CAACE,MAAK,GAAI,EAAE;MACpBF,QAAQ,CAACG,UAAS,GAAI,EAAE;MACxBC,QAAQ,CAACH,UAAS,GAAI,EAAE,EAAE;MAC1BG,QAAQ,CAACF,MAAK,GAAI,EAAE;MACpBE,QAAQ,CAACD,UAAS,GAAI,EAAE;IAC1B,CAAC;IAED,OAAO;MACLH,QAAQ;MACRI,QAAQ;MACRC,WAAW;MACXQ;IACF,CAAC;EACH,CAAC;EACDE,QAAQ,EAAE;IACNC,KAAKA,CAAA,EAAG;MACJ,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK;IAClC;EACJ;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}