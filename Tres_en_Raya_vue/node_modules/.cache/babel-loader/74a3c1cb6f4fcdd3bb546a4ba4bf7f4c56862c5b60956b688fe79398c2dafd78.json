{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"grid_game\",\n  class: \"text-primary\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-primary\",\n  role: \"alert\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"alert alert-primary\",\n  role: \"alert\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.cells, (cell, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      class: \"btn-custom\",\n      onClick: $event => $setup.makeMove(index)\n    }, _toDisplayString(cell), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Alerta de ganador \"), $setup.winner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" ¡\" + _toDisplayString($setup.winner) + \" ha ganado! \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Alerta de empate \"), $setup.tie ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" ¡Empate! \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","class","key","role","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","cells","cell","index","onClick","$event","makeMove","_hoisted_2","_createCommentVNode","winner","_hoisted_3","_toDisplayString","tie","_hoisted_4"],"sources":["C:\\Users\\kanok\\OneDrive\\Documents\\GitHub\\Curso_BackEnd_Javascript\\Tres_en_Raya_vue\\src\\components\\C01.vue"],"sourcesContent":["<template>\r\n    <div id=\"grid_game\" class=\"text-primary\">\r\n        <button v-for=\"(cell, index) in cells\" :key=\"index\" class=\"btn-custom\" @click=\"makeMove(index)\">{{ cell }}</button>\r\n                \r\n        <!-- Alerta de ganador -->\r\n        <div v-if=\"winner\" class=\"alert alert-primary\" role=\"alert\">\r\n            ¡{{ winner }} ha ganado!\r\n        </div>\r\n\r\n        <!-- Alerta de empate -->\r\n        <div v-if=\"tie\" class=\"alert alert-primary\" role=\"alert\">\r\n            ¡Empate!\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const cells = reactive([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n        const winner = ref(\"\");\r\n        const tie = ref(false);\r\n\r\n        const makeMove = (index) => {\r\n            if (!winner.value && !tie.value && cells[index] === \"\") {\r\n                cells[index] = currentPlayer.value;\r\n                checkWinner();\r\n                currentPlayer.value = currentPlayer.value === \"X\" ? \"O\" : \"X\";\r\n            }\r\n        };\r\n\r\n        const currentPlayer = ref(\"X\"); // Refactorizamos a una ref\r\n        const gameOver = ref(false); // Refactorizamos a una ref\r\n\r\n        const checkWinner = () => {\r\n            const winPatterns = [\r\n                [0, 1, 2], [3, 4, 5], [6, 7, 8], // Filas\r\n                [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columnas\r\n                [0, 4, 8], [2, 4, 6] // Diagonales\r\n            ];\r\n            for (let pattern of winPatterns) {\r\n                const [a, b, c] = pattern;\r\n                if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\r\n                    winner.value = cells[a];\r\n                    return;\r\n                }\r\n            }\r\n            if (!cells.includes(\"\")) {\r\n                tie.value = true;\r\n            }\r\n        };\r\n\r\n        return { cells, makeMove, winner, tie };\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n    .alert {\r\n        padding: 10px;\r\n        margin-top: 20px;\r\n        border-radius: 5px;\r\n        font-size: 18px;\r\n    }\r\n    * {\r\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    }\r\n\r\n    /* Celda 1: Colum1 Fil1 */\r\n    #grid_game { \r\n        width: 50%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n        display: grid;\r\n        grid-gap: 0px;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        grid-template-rows: repeat(3, 1fr);\r\n        grid-template-areas:                       \r\n            \"C1 C2 C3\"\r\n            \"C4 C5 C6\"\r\n            \"C7 C8 C9\"\r\n            \"AL AL AL\";\r\n    }\r\n    /* BORDES  DE LAS CELDAS */\r\n\r\n    /* CELDAS */\r\n    #C1 {\r\n        grid-area: C1;\r\n    }\r\n    #C2 {\r\n        grid-area: C2;\r\n        border-left: 10px solid blueviolet;\r\n        border-right: 10px solid blueviolet;\r\n    }\r\n    #C3 {\r\n        grid-area: C3;\r\n    }\r\n    #C4 {\r\n        grid-area: C4;\r\n        border-top: 10px solid blueviolet;\r\n        border-bottom: 10px solid  blueviolet;\r\n        \r\n    }\r\n    #C5 {\r\n        grid-area: C5;\r\n        border: 10px solid blueviolet;\r\n    }\r\n    #C6 {\r\n        grid-area: C6;\r\n        border-top: 10px solid blueviolet;\r\n        border-bottom: 10px solid blueviolet;\r\n    }\r\n    #C7 {\r\n        grid-area: C7;\r\n    }\r\n    #C8 {\r\n        grid-area: C8;\r\n        border-left: 10px solid blueviolet;\r\n        border-right: 10px solid  blueviolet;\r\n    }\r\n    #C9 {\r\n        grid-area: C9;\r\n    }\r\n\r\n    h2{\r\n        grid-area: H2;\r\n    }\r\n    /* Botones X y O */\r\n    .btn-custom {\r\n        /* Cambiar la fuente */\r\n        font-family: \"Henny Penny\", cursive;\r\n        /* Cambiar el tamaño de la fuente */\r\n        text-shadow: -1px -1px 0px #0042889f,\r\n            1px 1px 1px #004b9b9f,\r\n            0.5px 0.5px 0px #00000055;\r\n        font-size: 170%;\r\n        /* Cambiar el color del texto */\r\n        color: #ffffffc7;\r\n        /* Cambiar el color de fondo */\r\n        background-color: #007bff9f;\r\n        /* Añadir bordes redondeados */\r\n        border-radius: 5px;\r\n        /* Cambiar el espaciado alrededor del texto */\r\n        padding: 10px 20px;\r\n\r\n        /* Transición suave al pasar el ratón */\r\n        transition: all 0.3s ease;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        margin: 5px;\r\n        min-width: 80px; /* Establece un ancho mínimo */\r\n        min-height: 100px; /* Establece un alto mínimo */\r\n        width: 100%; /* Ancho preestablecido */\r\n        height: 100%; /* Alto preestablecido */ \r\n    }\r\n    .btn-custom:focus {\r\n        /* Quitar el contorno al enfocar */\r\n        outline: none;\r\n        /* Agregar sombra al enfocar */\r\n        box-shadow: 0 0 0 0.2rem rgba(0, 47, 255, 0.25);\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0030b4ce;\r\n        border-radius: 10%;\r\n    }\r\n\r\n    button:focus {\r\n        outline: none;\r\n    }\r\n\r\n    .alert {\r\n        padding: 10px;\r\n        margin-top: 20px;\r\n        border-radius: 5px;\r\n        font-size: 18px;\r\n        grid-area: AL;\r\n        text-align: center;\r\n    }\r\n\r\n</style>"],"mappings":";;EACSA,EAAE,EAAC,WAAW;EAACC,KAAK,EAAC;;mBAD9B;;EAAAC,GAAA;EAK2BD,KAAK,EAAC,qBAAqB;EAACE,IAAI,EAAC;;;EAL5DD,GAAA;EAUwBD,KAAK,EAAC,qBAAqB;EAACE,IAAI,EAAC;;;uBATrDC,mBAAA,CAYM,OAZNC,UAYM,I,kBAXFD,mBAAA,CAAmHE,SAAA,QAF3HC,WAAA,CAEwCC,MAAA,CAAAC,KAAK,EAF7C,CAEwBC,IAAI,EAAEC,KAAK;yBAA3BP,mBAAA,CAAmH;MAA3EF,GAAG,EAAES,KAAK;MAAEV,KAAK,EAAC,YAAY;MAAEW,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,QAAQ,CAACH,KAAK;wBAAMD,IAAI,wBAF/GK,UAAA;kCAIQC,mBAAA,uBAA0B,EACfR,MAAA,CAAAS,MAAM,I,cAAjBb,mBAAA,CAEM,OAFNc,UAEM,EAFsD,IACvD,GAAAC,gBAAA,CAAGX,MAAA,CAAAS,MAAM,IAAG,cACjB,mBAPRD,mBAAA,gBASQA,mBAAA,sBAAyB,EACdR,MAAA,CAAAY,GAAG,I,cAAdhB,mBAAA,CAEM,OAFNiB,UAEM,EAFmD,YAEzD,KAZRL,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}