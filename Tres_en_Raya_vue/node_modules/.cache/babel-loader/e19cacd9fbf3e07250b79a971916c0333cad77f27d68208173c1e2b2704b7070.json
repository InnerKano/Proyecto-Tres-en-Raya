{"ast":null,"code":"export default {\n  data() {\n    return {\n      cells: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      // Array para representar el estado del tablero\n      currentPlayer: \"X\",\n      // Jugador actual (puede ser \"X\" o \"O\")\n      gameOver: false // Indica si el juego ha terminado\n    };\n  },\n  methods: {\n    makeMove(index) {\n      if (!this.gameOver && this.cells[index] === \"\") {\n        this.$set(this.cells, index, this.currentPlayer);\n        this.checkWinner();\n        this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\n      }\n    },\n    checkWinner() {\n      const winPatterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n      // Filas\n      [0, 3, 6], [1, 4, 7], [2, 5, 8],\n      // Columnas\n      [0, 4, 8], [2, 4, 6] // Diagonales\n      ];\n      for (let pattern of winPatterns) {\n        const [a, b, c] = pattern;\n        if (this.cells[a] && this.cells[a] === this.cells[b] && this.cells[a] === this.cells[c]) {\n          this.gameOver = true;\n          alert(`¡${this.cells[a]} ha ganado!`);\n          return;\n        }\n      }\n      if (!this.cells.includes(\"\")) {\n        this.gameOver = true;\n        alert(\"¡Empate!\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cells","currentPlayer","gameOver","methods","makeMove","index","$set","checkWinner","winPatterns","pattern","a","b","c","alert","includes"],"sources":["C:\\Users\\kanok\\OneDrive\\Documents\\GitHub\\Curso_BackEnd_Javascript\\Vue\\Tres_en_Raya_vue\\src\\components\\C01.vue"],"sourcesContent":["<!-- COMPONENTE 1: FUNCIONAMIENTO JUEGO -->\r\n<template>\r\n    <div id=\"grid_game\">\r\n      <button id=\"C1\" @click=\"makeMove(0)\">{{ cells[0] }}</button>\r\n      <button id=\"C2\" @click=\"makeMove(1)\">{{ cells[1] }}</button>\r\n      <button id=\"C3\" @click=\"makeMove(2)\">{{ cells[2] }}</button>\r\n  \r\n      <button id=\"C4\" @click=\"makeMove(3)\">{{ cells[3] }}</button>\r\n      <button id=\"C5\" @click=\"makeMove(4)\">{{ cells[4] }}</button>\r\n      <button id=\"C6\" @click=\"makeMove(5)\">{{ cells[5] }}</button>\r\n  \r\n      <button id=\"C7\" @click=\"makeMove(6)\">{{ cells[6] }}</button>\r\n      <button id=\"C8\" @click=\"makeMove(7)\">{{ cells[7] }}</button>\r\n      <button id=\"C9\" @click=\"makeMove(8)\">{{ cells[8] }}</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cells: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], // Array para representar el estado del tablero\r\n      currentPlayer: \"X\", // Jugador actual (puede ser \"X\" o \"O\")\r\n      gameOver: false // Indica si el juego ha terminado\r\n    };\r\n  },\r\n  methods: {\r\n    makeMove(index) {\r\n      if (!this.gameOver && this.cells[index] === \"\") {\r\n        this.$set(this.cells, index, this.currentPlayer);\r\n        this.checkWinner();\r\n        this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\r\n      }\r\n    },\r\n    checkWinner() {\r\n      const winPatterns = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], // Filas\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columnas\r\n        [0, 4, 8], [2, 4, 6] // Diagonales\r\n      ];\r\n      for (let pattern of winPatterns) {\r\n        const [a, b, c] = pattern;\r\n        if (\r\n          this.cells[a] &&\r\n          this.cells[a] === this.cells[b] &&\r\n          this.cells[a] === this.cells[c]\r\n        ) {\r\n          this.gameOver = true;\r\n          alert(`¡${this.cells[a]} ha ganado!`);\r\n          return;\r\n        }\r\n      }\r\n      if (!this.cells.includes(\"\")) {\r\n        this.gameOver = true;\r\n        alert(\"¡Empate!\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n    * {\r\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    }\r\n\r\n    /* Celda 1: Colum1 Fil1 */\r\n    #grid_game { \r\n        width: 50%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n        display: grid;\r\n        grid-gap: 0px;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        grid-template-rows: repeat(3, 1fr);\r\n        grid-template-areas:                       \r\n            \"C1 C2 C3\"\r\n            \"C4 C5 C6\"\r\n            \"C7 C8 C9\";\r\n    }\r\n    /* BORDES  DE LAS CELDAS */\r\n\r\n    /* CELDAS */\r\n    #C1 {\r\n        grid-area: C1;\r\n    }\r\n    #C2 {\r\n        grid-area: C2;\r\n        border-left: solid;\r\n        border-right: solid;\r\n    }\r\n    #C3 {\r\n        grid-area: C3;\r\n    }\r\n    #C4 {\r\n        grid-area: C4;\r\n        border-top: solid;\r\n        border-bottom: solid;\r\n        \r\n    }\r\n    #C5 {\r\n        grid-area: C5;\r\n        border: solid;\r\n    }\r\n    #C6 {\r\n        grid-area: C6;\r\n        border-top: solid;\r\n        border-bottom: solid;\r\n    }\r\n    #C7 {\r\n        grid-area: C7;\r\n    }\r\n    #C8 {\r\n        grid-area: C8;\r\n        border-left: solid;\r\n        border-right: solid;\r\n    }\r\n    #C9 {\r\n        grid-area: C9;\r\n    }\r\n\r\n    h2{\r\n        grid-area: H2;\r\n    }\r\n    button {\r\n        background-color: #ff000000;\r\n        border: none;\r\n        cursor: pointer;\r\n        width: 100%; /* Ancho preestablecido */\r\n        height: 100%; /* Alto preestablecido */\r\n        min-width: 50px; /* Establece un ancho mínimo */\r\n        min-height: 70px; /* Establece un alto mínimo */\r\n        font-size: 75%; /* Tamaño de fuente */\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #002fb180;\r\n        border-radius: 5%;\r\n    }\r\n\r\n    button:focus {\r\n        outline: none;\r\n    }\r\n\r\n</style>"],"mappings":"AAkBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAAE;MAC7CC,aAAa,EAAE,GAAG;MAAE;MACpBC,QAAQ,EAAE,KAAI,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,KAAK,EAAE;MACd,IAAI,CAAC,IAAI,CAACH,QAAO,IAAK,IAAI,CAACF,KAAK,CAACK,KAAK,MAAM,EAAE,EAAE;QAC9C,IAAI,CAACC,IAAI,CAAC,IAAI,CAACN,KAAK,EAAEK,KAAK,EAAE,IAAI,CAACJ,aAAa,CAAC;QAChD,IAAI,CAACM,WAAW,CAAC,CAAC;QAClB,IAAI,CAACN,aAAY,GAAI,IAAI,CAACA,aAAY,KAAM,GAAE,GAAI,GAAE,GAAI,GAAG;MAC7D;IACF,CAAC;IACDM,WAAWA,CAAA,EAAG;MACZ,MAAMC,WAAU,GAAI,CAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MAAA,CACtB;MACD,KAAK,IAAIC,OAAM,IAAKD,WAAW,EAAE;QAC/B,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,IAAIH,OAAO;QACzB,IACE,IAAI,CAACT,KAAK,CAACU,CAAC,KACZ,IAAI,CAACV,KAAK,CAACU,CAAC,MAAM,IAAI,CAACV,KAAK,CAACW,CAAC,KAC9B,IAAI,CAACX,KAAK,CAACU,CAAC,MAAM,IAAI,CAACV,KAAK,CAACY,CAAC,GAC9B;UACA,IAAI,CAACV,QAAO,GAAI,IAAI;UACpBW,KAAK,CAAE,IAAG,IAAI,CAACb,KAAK,CAACU,CAAC,CAAC,aAAa,CAAC;UACrC;QACF;MACF;MACA,IAAI,CAAC,IAAI,CAACV,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC,EAAE;QAC5B,IAAI,CAACZ,QAAO,GAAI,IAAI;QACpBW,KAAK,CAAC,UAAU,CAAC;MACnB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}