{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6f2175b6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"grid_C02\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Registro de Partida\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  id: \"player1\",\n  class: \"coolinput\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"input\",\n  class: \"text\"\n}, \"Jugador 1:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  id: \"player2\",\n  class: \"coolinput\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"input\",\n  class: \"text\"\n}, \"Jugador 2:\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.registrarPartida && _ctx.registrarPartida(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"section\", null, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"jugador1\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.jugador1.nombre = $event),\n    name: \"input\",\n    class: \"input formulario_in\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.jugador1.nombre]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"jugador2\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.jugador2.nombre = $event),\n    name: \"input\",\n    class: \"input formulario_in\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.jugador2.nombre]])])]), _createElementVNode(\"button\", {\n    id: \"start\",\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.enviarDatos())\n  }, \"Iniciar Partida\"), _createCommentVNode(\"  \")], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","for","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","_ctx","registrarPartida","_hoisted_3","_hoisted_4","type","$event","$setup","jugador1","nombre","name","_hoisted_5","_hoisted_6","jugador2","onClick","enviarDatos","_createCommentVNode"],"sources":["C:\\Users\\kanok\\OneDrive\\Documents\\GitHub\\Proyecto Tres en Raya\\Tres_en_Raya_vue\\src\\components\\C02.vue"],"sourcesContent":["<!-- COMPONENTE 2: UI-->\r\n<!-- nombre archivo: C02.vue -->\r\n<template>\r\n    <div id=\"grid_C02\">\r\n      <h2>Registro de Partida</h2>\r\n      <form @submit.prevent=\"registrarPartida\">\r\n        <section>\r\n            <div id=\"player1\" class=\"coolinput\">\r\n                <label for=\"input\" class=\"text\">Jugador 1:</label>\r\n                <input type=\"text\" id=\"jugador1\" v-model=\"jugador1.nombre\" name=\"input\" class=\"input formulario_in\">\r\n            </div>\r\n            <div id=\"player2\" class=\"coolinput\">\r\n                <label for=\"input\" class=\"text\">Jugador 2:</label>\r\n                <input type=\"text\" id=\"jugador2\"  v-model=\"jugador2.nombre\" name=\"input\" class=\"input formulario_in\">\r\n            </div>\r\n            \r\n        </section>\r\n        <button id=\"start\" type=\"button\" @click=\"enviarDatos()\">Iniciar Partida</button>\r\n        <!--  -->\r\n       \r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n\r\n  export default {\r\n    setup() {\r\n      // Datos de los jugadores\r\n      let jugador1 = {\r\n        id_jugador: '',\r\n        nombre:'',\r\n        puntuacion:''\r\n      };\r\n      let jugador2 = {\r\n        id_jugador: '',\r\n        nombre:'',\r\n        puntuacion:''\r\n      };\r\n  \r\n      // Método para registrar la partida\r\n      const enviarDatos = async () => {\r\n                try {\r\n                    const url = `http://localhost:4000/api/afiliacion/crear/`;\r\n                    const data = { jugador1, jugador2 }; // Pasar ambos jugadores como un objeto\r\n                    const response = await axios.post(url, data); // Pasar el objeto `data` que contiene ambos jugadores\r\n                    console.log(response.data);\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            };\r\n\r\n      // Método para reiniciar el formulario\r\n      const reset = () => {\r\n        jugador1.id_jugador = ''; // Reinicia el valor del jugador 1\r\n        jugador1.nombre = '';\r\n        jugador1.puntuacion = '';\r\n        jugador2.id_jugador = ''; // Reinicia el valor del jugador 2\r\n        jugador2.nombre = '';\r\n        jugador2.puntuacion = '';\r\n      };\r\n  \r\n      return {\r\n        jugador1,\r\n        jugador2,\r\n        enviarDatos,\r\n        reset\r\n      };\r\n    },\r\n    computed: {\r\n          Afil() {\r\n              return this.$store.state.Afil;\r\n          },\r\n    },\r\n\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n     /* GRID */\r\n    #grid_C02 { \r\n        width: 100%;\r\n        height:50%; \r\n        margin: 0 auto;\r\n        display: grid;\r\n        grid-gap: 0px;\r\n        grid-template-columns: repeat(1, 1fr);\r\n        grid-template-rows: repeat(1, 1fr);\r\n        grid-template-areas:  \r\n            \"H2 H2\"                     \r\n            \"S S\"\r\n            \"ST ST\";\r\n        align-items: center;\r\n        justify-items: center;\r\n        text-align: center;\r\n        \r\n    }\r\n    h2{\r\n        grid-area: H2;\r\n        font-family: \"Henny Penny\", cursive;\r\n    }\r\n    section{\r\n        grid-area: S;\r\n        margin-bottom: 10px;\r\n        display: flex;\r\n        justify-items: center;\r\n    }\r\n    #player1{\r\n        grid-area: P1;\r\n    }\r\n    #player1{\r\n        grid-area: P2;\r\n    }\r\n    #start{\r\n        grid-area: ST;\r\n    }\r\n/* Styles inputs jugador */\r\n    .coolinput {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: fit-content;\r\n    position: static;\r\n    max-width: 240px;\r\n    }\r\n\r\n    .coolinput label.text {\r\n    font-size: 0.75rem;\r\n    color: #818CF8;\r\n    font-weight: 700;\r\n    position: relative;\r\n    top: 0.5rem;\r\n    margin: 0 0 0 7px;\r\n    padding: 0 3px;\r\n    background: #e8e8e8e3;\r\n    border-radius: 5px;\r\n    width: fit-content;\r\n    }\r\n\r\n    .coolinput input[type=text].input {\r\n    padding: 11px 10px;\r\n    font-size: 0.75rem;\r\n    border: 2px #818CF8 solid;\r\n    border-radius: 5px;\r\n    background: #e8e8e8;\r\n    }\r\n\r\n    .coolinput input[type=text].input:focus {\r\n    outline: none;\r\n    }\r\n\r\n\r\n  .registro-partida {\r\n    max-width: 400px;\r\n    margin: auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .input-group {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  button {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>"],"mappings":";;;EAGSA,EAAE,EAAC;AAAU;gEAChBC,mBAAA,CAA4B,YAAxB,qBAAmB;;EAGZD,EAAE,EAAC,SAAS;EAACE,KAAK,EAAC;;gEACpBD,mBAAA,CAAkD;EAA3CE,GAAG,EAAC,OAAO;EAACD,KAAK,EAAC;GAAO,YAAU;;EAGzCF,EAAE,EAAC,SAAS;EAACE,KAAK,EAAC;;gEACpBD,mBAAA,CAAkD;EAA3CE,GAAG,EAAC,OAAO;EAACD,KAAK,EAAC;GAAO,YAAU;;uBATtDE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,UAA4B,EAC5BL,mBAAA,CAeO;IAfAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;MACrCT,mBAAA,CAUU,kBATNA,mBAAA,CAGM,OAHNY,UAGM,GAFFC,UAAkD,E,gBAClDb,mBAAA,CAAoG;IAA7Fc,IAAI,EAAC,MAAM;IAACf,EAAE,EAAC,UAAU;IAThD,uBAAAQ,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAS0DC,MAAA,CAAAC,QAAQ,CAACC,MAAM,GAAAH,MAAA;IAAEI,IAAI,EAAC,OAAO;IAAClB,KAAK,EAAC;iDAApCe,MAAA,CAAAC,QAAQ,CAACC,MAAM,E,KAE7DlB,mBAAA,CAGM,OAHNoB,UAGM,GAFFC,UAAkD,E,gBAClDrB,mBAAA,CAAqG;IAA9Fc,IAAI,EAAC,MAAM;IAACf,EAAE,EAAC,UAAU;IAbhD,uBAAAQ,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAa2DC,MAAA,CAAAM,QAAQ,CAACJ,MAAM,GAAAH,MAAA;IAAEI,IAAI,EAAC,OAAO;IAAClB,KAAK,EAAC;iDAApCe,MAAA,CAAAM,QAAQ,CAACJ,MAAM,E,OAIlElB,mBAAA,CAAgF;IAAxED,EAAE,EAAC,OAAO;IAACe,IAAI,EAAC,QAAQ;IAAES,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAAEC,MAAA,CAAAQ,WAAW;KAAI,iBAAe,GACvEC,mBAAA,MAAS,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}