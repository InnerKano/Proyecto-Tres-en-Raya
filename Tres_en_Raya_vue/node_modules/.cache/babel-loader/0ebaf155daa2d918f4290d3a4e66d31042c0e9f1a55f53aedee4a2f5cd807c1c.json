{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6f3da4b8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"grid_game\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cells, (cell, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      onClick: $event => $options.makeMove(index)\n    }, _toDisplayString(cell), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), $data.winner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"¡\" + _toDisplayString($data.winner) + \" ha ganado!\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.resetGame && $options.resetGame(...args))\n  }, \"Reiniciar juego\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","cells","cell","index","onClick","$event","$options","makeMove","_hoisted_2","winner","_hoisted_3","_createElementVNode","_toDisplayString","_cache","args","resetGame","_createCommentVNode"],"sources":["C:\\Users\\kanok\\OneDrive\\Documents\\GitHub\\Curso_BackEnd_Javascript\\Vue\\Tres_en_Raya_vue\\src\\components\\C01.vue"],"sourcesContent":["<template>\r\n    <div id=\"grid_game\">\r\n      <button v-for=\"(cell, index) in cells\" :key=\"index\" @click=\"makeMove(index)\">\r\n        {{ cell }}\r\n      </button>\r\n      <div v-if=\"winner\">\r\n        <p>¡{{ winner }} ha ganado!</p>\r\n        <button @click=\"resetGame\">Reiniciar juego</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        cells: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], // Representa el estado de las celdas del tablero\r\n        currentPlayer: \"X\", // Jugador actual\r\n        winner: null // Almacena al ganador o null si no hay ganador aún\r\n      };\r\n    },\r\n    methods: {\r\n      makeMove(index) {\r\n        if (!this.cells[index] && !this.winner) {\r\n          // Verifica si la celda está vacía y si todavía no hay un ganador\r\n          this.$set(this.cells, index, this.currentPlayer); // Registra el movimiento del jugador en la celda correspondiente\r\n          this.checkWinner(); // Verifica si hay un ganador después de cada movimiento\r\n          this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\"; // Alterna el jugador actual\r\n        }\r\n      },\r\n      checkWinner() {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6]\r\n        ];\r\n        for (let line of lines) {\r\n          const [a, b, c] = line;\r\n          if (\r\n            this.cells[a] &&\r\n            this.cells[a] === this.cells[b] &&\r\n            this.cells[a] === this.cells[c]\r\n          ) {\r\n            this.winner = this.cells[a]; // Establece al ganador\r\n            return;\r\n          }\r\n        }\r\n        if (this.cells.every(cell => cell !== \"\")) {\r\n          // Verifica si todas las celdas están ocupadas y no hay ganador\r\n          this.winner = \"Empate\";\r\n        }\r\n      },\r\n      resetGame() {\r\n        // Reinicia el juego\r\n        this.cells = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n        this.currentPlayer = \"X\";\r\n        this.winner = null;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #grid_game {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 100px); /* Ajusta el ancho de las columnas */\r\n    grid-template-rows: repeat(3, 100px); /* Ajusta el alto de las filas */\r\n    grid-gap: 5px;\r\n  }\r\n  \r\n  button {\r\n    background-color: #fff;\r\n    border: 1px solid #000;\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n  \r\n  button:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  div {\r\n    text-align: center;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  p {\r\n    font-weight: bold;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,EAAE,EAAC;AAAW;mBADvB;;EAAAC,GAAA;AAAA;;uBACIC,mBAAA,CAQM,OARNC,UAQM,I,kBAPJD,mBAAA,CAESE,SAAA,QAJfC,WAAA,CAEsCC,KAAA,CAAAC,KAAK,EAF3C,CAEsBC,IAAI,EAAEC,KAAK;yBAA3BP,mBAAA,CAES;MAF+BD,GAAG,EAAEQ,KAAK;MAAGC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ,CAACJ,KAAK;wBACrED,IAAI,wBAHfM,UAAA;kCAKiBR,KAAA,CAAAS,MAAM,I,cAAjBb,mBAAA,CAGM,OARZc,UAAA,GAMQC,mBAAA,CAA+B,WAA5B,GAAC,GAAAC,gBAAA,CAAGZ,KAAA,CAAAS,MAAM,IAAG,aAAW,iBAC3BE,mBAAA,CAAmD;IAA1CP,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAS,SAAA,IAAAT,QAAA,CAAAS,SAAA,IAAAD,IAAA,CAAS;KAAE,iBAAe,E,KAPlDE,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}