{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"grid_game\",\n  class: \"text-primary\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"alert alert-primary\",\n  role: \"alert\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"alert alert-primary\",\n  role: \"alert\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Botones para cada celda del juego \"), _createElementVNode(\"button\", {\n    id: \"C1\",\n    class: \"btn-custom\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.makeMove(0))\n  }, _toDisplayString($setup.cells[0]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C2\",\n    class: \"btn-custom\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.makeMove(1))\n  }, _toDisplayString($setup.cells[1]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C3\",\n    class: \"btn-custom\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.makeMove(2))\n  }, _toDisplayString($setup.cells[2]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C4\",\n    class: \"btn-custom\",\n    onClick: _cache[3] || (_cache[3] = $event => $setup.makeMove(3))\n  }, _toDisplayString($setup.cells[3]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C5\",\n    class: \"btn-custom\",\n    onClick: _cache[4] || (_cache[4] = $event => $setup.makeMove(4))\n  }, _toDisplayString($setup.cells[4]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C6\",\n    class: \"btn-custom\",\n    onClick: _cache[5] || (_cache[5] = $event => $setup.makeMove(5))\n  }, _toDisplayString($setup.cells[5]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C7\",\n    class: \"btn-custom\",\n    onClick: _cache[6] || (_cache[6] = $event => $setup.makeMove(6))\n  }, _toDisplayString($setup.cells[6]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C8\",\n    class: \"btn-custom\",\n    onClick: _cache[7] || (_cache[7] = $event => $setup.makeMove(7))\n  }, _toDisplayString($setup.cells[7]), 1 /* TEXT */), _createElementVNode(\"button\", {\n    id: \"C9\",\n    class: \"btn-custom\",\n    onClick: _cache[8] || (_cache[8] = $event => $setup.makeMove(8))\n  }, _toDisplayString($setup.cells[8]), 1 /* TEXT */), _createCommentVNode(\" Alerta de ganador \"), $setup.winner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" ¡\" + _toDisplayString($setup.winner) + \" ha ganado! \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Alerta de empate \"), $setup.tie ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" ¡Empate! \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","class","key","role","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onClick","_cache","$event","$setup","makeMove","cells","winner","_hoisted_2","_toDisplayString","tie","_hoisted_3"],"sources":["C:\\Users\\kanok\\OneDrive\\Documents\\GitHub\\Curso_BackEnd_Javascript\\Tres_en_Raya_vue\\src\\components\\C01.vue"],"sourcesContent":["<!-- COMPONENTE 1: FUNCIONAMIENTO JUEGO -->\r\n\r\n<template>\r\n    <div id=\"grid_game\" class=\"text-primary\">\r\n        <!-- Botones para cada celda del juego -->\r\n        <button id=\"C1\" class=\"btn-custom\" @click=\"makeMove(0)\">{{ cells[0] }}</button>\r\n        <button id=\"C2\" class=\"btn-custom\" @click=\"makeMove(1)\">{{ cells[1] }}</button>\r\n        <button id=\"C3\" class=\"btn-custom\" @click=\"makeMove(2)\">{{ cells[2] }}</button>\r\n        <button id=\"C4\" class=\"btn-custom\" @click=\"makeMove(3)\">{{ cells[3] }}</button>\r\n        <button id=\"C5\" class=\"btn-custom\" @click=\"makeMove(4)\">{{ cells[4] }}</button>\r\n        <button id=\"C6\" class=\"btn-custom\" @click=\"makeMove(5)\">{{ cells[5] }}</button>\r\n        <button id=\"C7\" class=\"btn-custom\" @click=\"makeMove(6)\">{{ cells[6] }}</button>\r\n        <button id=\"C8\" class=\"btn-custom\" @click=\"makeMove(7)\">{{ cells[7] }}</button>\r\n        <button id=\"C9\" class=\"btn-custom\" @click=\"makeMove(8)\">{{ cells[8] }}</button>\r\n                \r\n        <!-- Alerta de ganador -->\r\n        <div v-if=\"winner\" class=\"alert alert-primary\" role=\"alert\">\r\n            ¡{{ winner }} ha ganado!\r\n        </div>\r\n\r\n        <!-- Alerta de empate -->\r\n        <div v-if=\"tie\" class=\"alert alert-primary\" role=\"alert\">\r\n            ¡Empate!\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        // Declaración de variables reactivas\r\n        const cells = reactive([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n        let currentPlayer = \"X\"; // Jugador actual (puede ser \"X\" o \"O\")\r\n        let gameOver = false; // Indica si el juego ha terminado\r\n        const winner = ref(\"\"); // Referencia para almacenar al ganador\r\n        const tie = ref(false); // Referencia para indicar empate\r\n\r\n        // Función para realizar una jugada\r\n        const makeMove = (index) => {\r\n            // Verifica si el juego aún no ha terminado y la celda está vacía\r\n            if (!winner.value && !tie.value && cells[index] === \"\") {\r\n                cells[index] = currentPlayer; // Asigna el jugador actual a la celda\r\n                checkWinner(); // Verifica si hay un ganador\r\n                currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\"; // Cambia de jugador\r\n            }\r\n        };\r\n\r\n        // Función para verificar si hay un ganador\r\n        const checkWinner = () => {\r\n            // Patrones de victoria en el juego\r\n            const winPatterns = [\r\n                [0, 1, 2], [3, 4, 5], [6, 7, 8], // Filas\r\n                [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columnas\r\n                [0, 4, 8], [2, 4, 6] // Diagonales\r\n            ];\r\n            // Itera sobre los patrones de victoria\r\n            for (let pattern of winPatterns) {\r\n                const [a, b, c] = pattern;\r\n                // Verifica si las celdas en el patrón son iguales y no están vacías\r\n                if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\r\n                    winner.value = cells[a]; // Establece al ganador\r\n                    return;\r\n                }\r\n            }\r\n            // Si no hay ganador y todas las celdas están llenas, se declara empate\r\n            if (!cells.includes(\"\")) {\r\n                tie.value = true;\r\n            }\r\n        };\r\n        const reset = () => {\r\n            // Reinicia todas las celdas y las variables relacionadas con el juego\r\n            cells.forEach((cell, index) => {\r\n                cells[index] = \"\";\r\n            });\r\n            winner.value = \"\";\r\n            tie.value = false;\r\n            currentPlayer = \"X\"; // Reinicia el jugador actual\r\n        };\r\n\r\n        const resetComponent1 = () => {\r\n        reset();\r\n        };\r\n\r\n        // Registra el evento para reiniciar este componente cuando se emite desde el componente 2\r\n        // Este hook se ejecuta cuando el componente está montado\r\n        onMounted(() => {\r\n        // Escuchar el evento 'reset-component-1' emitido por el componente 2\r\n        this.$on('reset-component-1', resetComponent1);\r\n        });\r\n\r\n        // Desechar el evento cuando el componente se desmonta para evitar fugas de memoria\r\n        onBeforeUnmount(() => {\r\n        // Eliminar el evento 'reset-component-1' cuando el componente se desmonta\r\n        this.$off('reset-component-1', resetComponent1);\r\n        });\r\n\r\n        return { cells, makeMove, winner, tie };\r\n    }\r\n\r\n\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n    .alert {\r\n        padding: 10px;\r\n        margin-top: 20px;\r\n        border-radius: 5px;\r\n        font-size: 18px;\r\n    }\r\n    * {\r\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    }\r\n\r\n    /* Celda 1: Colum1 Fil1 */\r\n    #grid_game { \r\n        width: 50%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n        display: grid;\r\n        grid-gap: 0px;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        grid-template-rows: repeat(3, 1fr);\r\n        grid-template-areas:                       \r\n            \"C1 C2 C3\"\r\n            \"C4 C5 C6\"\r\n            \"C7 C8 C9\"\r\n            \"AL AL AL\";\r\n        align-items: center;\r\n        justify-items: center;\r\n        text-align: center;\r\n    }\r\n    /* BORDES  DE LAS CELDAS */\r\n\r\n    /* CELDAS */\r\n    #C1 {\r\n        grid-area: C1;\r\n    }\r\n    #C2 {\r\n        grid-area: C2;\r\n        border-left: 10px solid blueviolet;\r\n        border-right: 10px solid blueviolet;\r\n    }\r\n    #C3 {\r\n        grid-area: C3;\r\n    }\r\n    #C4 {\r\n        grid-area: C4;\r\n        border-top: 10px solid blueviolet;\r\n        border-bottom: 10px solid  blueviolet;\r\n        \r\n    }\r\n    #C5 {\r\n        grid-area: C5;\r\n        border: 10px solid blueviolet;\r\n    }\r\n    #C6 {\r\n        grid-area: C6;\r\n        border-top: 10px solid blueviolet;\r\n        border-bottom: 10px solid blueviolet;\r\n    }\r\n    #C7 {\r\n        grid-area: C7;\r\n    }\r\n    #C8 {\r\n        grid-area: C8;\r\n        border-left: 10px solid blueviolet;\r\n        border-right: 10px solid  blueviolet;\r\n    }\r\n    #C9 {\r\n        grid-area: C9;\r\n    }\r\n\r\n    h2{\r\n        grid-area: H2;\r\n    }\r\n    /* Botones X y O */\r\n    .btn-custom {\r\n        /* Cambiar la fuente */\r\n        font-family: \"Henny Penny\", cursive;\r\n        /* Cambiar el tamaño de la fuente */\r\n        text-shadow: -1px -1px 0px #0042889f,\r\n            1px 1px 1px #004b9b9f,\r\n            0.5px 0.5px 0px #00000055;\r\n        font-size: 170%;\r\n        /* Cambiar el color del texto */\r\n        color: #ffffffc7;\r\n        /* Cambiar el color de fondo */\r\n        background-color: #007bff9f;\r\n        /* Añadir bordes redondeados */\r\n        border-radius: 5px;\r\n        /* Cambiar el espaciado alrededor del texto */\r\n        padding: 10px 20px;\r\n\r\n        /* Transición suave al pasar el ratón */\r\n        transition: all 0.3s ease;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        margin: 5px;\r\n        min-width: 80px; /* Establece un ancho mínimo */\r\n        min-height: 100px; /* Establece un alto mínimo */\r\n        width: 100%; /* Ancho preestablecido */\r\n        height: 100%; /* Alto preestablecido */ \r\n        border-style: none;\r\n    }\r\n    .btn-custom:focus {\r\n        /* Quitar el contorno al enfocar */\r\n        outline: none;\r\n        /* Agregar sombra al enfocar */\r\n        box-shadow: 0 0 0 0.2rem rgba(0, 47, 255, 0.25);\r\n    }\r\n\r\n    button:hover {\r\n        background-color: #0030b4ce;\r\n        border-radius: 10%;\r\n    }\r\n\r\n    button:focus {\r\n        outline: none;\r\n    }\r\n\r\n    .alert {\r\n        padding: 10px;\r\n        margin-top: 20px;\r\n        border-radius: 5px;\r\n        font-size: 18px;\r\n        grid-area: AL;\r\n        text-align: center;\r\n    }\r\n\r\n</style>"],"mappings":";;EAGSA,EAAE,EAAC,WAAW;EAACC,KAAK,EAAC;;;EAH9BC,GAAA;EAgB2BD,KAAK,EAAC,qBAAqB;EAACE,IAAI,EAAC;;;EAhB5DD,GAAA;EAqBwBD,KAAK,EAAC,qBAAqB;EAACE,IAAI,EAAC;;;uBAlBrDC,mBAAA,CAqBM,OArBNC,UAqBM,GApBFC,mBAAA,uCAA0C,EAC1CC,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAChEN,mBAAA,CAA+E;IAAvEP,EAAE,EAAC,IAAI;IAACC,KAAK,EAAC,YAAY;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,QAAQ;sBAAQD,MAAA,CAAAE,KAAK,qBAEhEP,mBAAA,uBAA0B,EACfK,MAAA,CAAAG,MAAM,I,cAAjBV,mBAAA,CAEM,OAFNW,UAEM,EAFsD,IACvD,GAAAC,gBAAA,CAAGL,MAAA,CAAAG,MAAM,IAAG,cACjB,mBAlBRR,mBAAA,gBAoBQA,mBAAA,sBAAyB,EACdK,MAAA,CAAAM,GAAG,I,cAAdb,mBAAA,CAEM,OAFNc,UAEM,EAFmD,YAEzD,KAvBRZ,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}